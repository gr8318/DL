#Handwritten Digit Classification on MNIST using CNN (TensorFlow/Keras)
import tensorflow as tf
from tensorflow.keras import datasets, layers, models
import numpy as np
import matplotlib.pyplot as plt

(x_train, y_train), (x_test, y_test) = datasets.mnist.load_data()

x_train = x_train.reshape(-1, 28, 28, 1).astype("float32") / 255.0
x_test = x_test.reshape(-1, 28, 28, 1).astype("float32") / 255.0
40

model = models.Sequential([
 layers.Conv2D(32, (3, 3), activation="relu", input_shape=(28, 28, 1)),
 layers.MaxPooling2D((2, 2)),
 layers.Conv2D(64, (3, 3), activation="relu"),
 layers.MaxPooling2D((2, 2)),
 layers.Flatten(),
 layers.Dense(128, activation="relu"),
 layers.Dense(10, activation="softmax")
])

model.compile(
 optimizer="adam",
 loss="sparse_categorical_crossentropy",
 metrics=["accuracy"]
)

model.fit(x_train, y_train, epochs=5, validation_split=0.1)

loss, acc = model.evaluate(x_test, y_test, verbose=0)
print(f"\nTest Accuracy: {acc*100:.2f}%")

img = x_test[4]
plt.imshow(img.squeeze(), cmap="gray")
plt.title("Input Digit")
plt.show()
pred = model.predict(np.expand_dims(img, axis=0), verbose=0)
print("Predicted digit:", pred.argmax())
